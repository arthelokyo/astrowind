---
import { Image } from 'astro:assets';

export interface Achievement {
  title: string;
  date: string;
  description: string;
  imageUrl?: string;
}

export interface Certification {
  title: string;
  issuer: string;
  date: string;
  imageUrl?: string;
  credentialUrl?: string;
}

export interface Props {
  achievements: Array<Achievement>;
  certifications: Array<Certification>;
  title?: string;
  subtitle?: string;
}

const {
  achievements,
  certifications,
  title = 'Achievements & Certifications',
  subtitle = 'My professional accomplishments and credentials'
} = Astro.props;
---

<div class="mx-auto max-w-6xl px-4 py-8 sm:px-6 lg:px-8 lg:py-12">
  <div class="mb-8 text-center">
    <h2 class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl">{title}</h2>
    <p class="mt-4 text-lg leading-6 text-gray-600 dark:text-gray-400">{subtitle}</p>
  </div>

  <!-- Tabs -->
  <div class="mb-8 flex justify-center">
    <div class="inline-flex items-center rounded-full bg-gray-100 dark:bg-gray-800 p-1 shadow-inner">
      <button class="tab-btn px-5 py-2 text-sm font-medium rounded-full transition-all duration-300 focus:outline-none" data-tab="certifications">
        Certifications
      </button>
      <button class="tab-btn px-5 py-2 text-sm font-medium rounded-full transition-all duration-300 focus:outline-none" data-tab="achievements">
        Achievements
      </button>
    </div>
  </div>

  <!-- Content -->
  <div class="relative overflow-hidden">

    <!-- Certifications -->
    <div id="certifications-tab" class="tab-content hidden">
      <div id="certifications-carousel" class="carousel flex space-x-4 overflow-x-auto snap-x no-scrollbar pb-2 scroll-smooth">
        {certifications.map((certification) => (
          <div class="flex-none w-80 snap-center bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            {certification.imageUrl && <Image src={certification.imageUrl} alt={certification.title} class="w-full h-48 object-cover" width={320} height={192} />}
            <div class="p-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white">{certification.title}</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">{certification.issuer}</p>
              <time class="text-sm text-gray-500 dark:text-gray-400">{certification.date}</time>
              {certification.credentialUrl && (
                <a
                  href={certification.credentialUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="mt-2 inline-flex items-center text-sm text-[var(--aw-color-accent)] hover:underline"
                >
                  View Credential
                </a>
              )}
            </div>
          </div>
        ))}
      </div>
      <!-- Progress Bar -->
      <div class="progress-wrapper mt-2 h-1 w-full bg-gray-300 dark:bg-gray-700 rounded">
        <div id="certifications-progress" class="progress-bar h-1 rounded w-0"></div>
      </div>
    </div>

    <!-- Achievements -->
    <div id="achievements-tab" class="tab-content hidden">
      <div id="achievements-carousel" class="carousel flex space-x-4 overflow-x-auto snap-x no-scrollbar pb-2 scroll-smooth">
        {achievements.map((achievement) => (
          <div class="flex-none w-80 snap-center bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            {achievement.imageUrl && <Image src={achievement.imageUrl} alt={achievement.title} class="w-full h-48 object-cover" width={320} height={192} />}
            <div class="p-4">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white">{achievement.title}</h3>
              <time class="text-sm text-gray-500 dark:text-gray-400">{achievement.date}</time>
              <p class="mt-2 text-gray-600 dark:text-gray-300">{achievement.description}</p>
            </div>
          </div>
        ))}
      </div>
      <!-- Progress Bar -->
      <div class="progress-wrapper mt-2 h-1 w-full bg-gray-300 dark:bg-gray-700 rounded">
        <div id="achievements-progress" class="progress-bar h-1 rounded w-0"></div>
      </div>
    </div>
  </div>
</div>

<style>
  .tab-btn.active {
    @apply bg-white dark:bg-gray-900 shadow;
    color: var(--aw-color-accent);
  }

  .tab-btn:not(.active) {
    @apply text-gray-600 dark:text-gray-400;
  }

  .tab-btn:hover {
    color: var(--aw-color-accent);
  }

  .progress-bar {
    background-color: var(--aw-color-accent);
  }

  .no-scrollbar::-webkit-scrollbar {
    display: none;
  }
  .no-scrollbar {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
</style>

<script>
  function setupTabs() {
    const tabs = document.querySelectorAll('.tab-btn');
    const contents = document.querySelectorAll('.tab-content');

    function switchTab(tab) {
      tabs.forEach(btn => btn.classList.toggle('active', btn.dataset.tab === tab));
      contents.forEach(c => c.classList.toggle('hidden', c.id !== `${tab}-tab`));
    }

    tabs.forEach(button => {
      button.addEventListener('click', () => {
        switchTab(button.dataset.tab);
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
      switchTab('certifications');
      setupScrollProgress('certifications-carousel', 'certifications-progress');
      setupScrollProgress('achievements-carousel', 'achievements-progress');
    });
  }

  function setupScrollProgress(carouselId, barId) {
  const carousel = document.getElementById(carouselId);
  const progressBar = document.getElementById(barId);
  const progressWrapper = progressBar?.parentElement;

  if (!carousel || !progressBar || !progressWrapper) return;

  function updateProgress() {
    const scrollLeft = carousel.scrollLeft;
    const maxScroll = carousel.scrollWidth - carousel.clientWidth;

    if (maxScroll <= 0) {
      progressWrapper.style.display = 'none';
    } else {
      progressWrapper.style.display = 'block';
      const percent = (scrollLeft / maxScroll) * 100;
      progressBar.style.width = `${percent}%`;
    }
  }

  // Initial check
  updateProgress();

  // Update on scroll and resize
  carousel.addEventListener('scroll', updateProgress);
  window.addEventListener('resize', updateProgress);
}

  setupTabs();
</script>
