---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';

import type { ProjectStatus } from '~/data/projects';

export interface Project {
  slug: string;
  title: string;
  description: string;
  image: ImageMetadata | string;
  publishDate: Date;
  github?: string;
  status: ProjectStatus;
}

export interface Props {
  projects: Array<Project>;
  title?: string;
  subtitle?: string;
}

const { projects, title = 'Projects', subtitle = 'Check out my latest projects and work' } = Astro.props;
---

<div class="flex flex-col gap-6">
  {
    projects.map((project) => (
      <div class="relative flex flex-col p-6 bg-white dark:bg-slate-900 rounded-lg shadow hover:shadow-lg transition border border-transparent dark:border-slate-800">
        <div class="flex gap-2 mb-4 md:hidden">
          {project.status.includes('latest') && (
            <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-sm dark:bg-blue-900 dark:text-blue-300">
              Latest
            </span>
          )}
          {project.status.includes('completed') && (
            <span class="bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded-sm dark:bg-green-900 dark:text-green-300">
              Completed
            </span>
          )}
          {project.status.includes('in-development') && (
            <span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded-sm dark:bg-yellow-900 dark:text-yellow-300">
              In Development
            </span>
          )}
        </div>
        <div class="flex flex-col md:flex-row gap-6">
          {project.image && (
            <div class="md:w-1/3">
              <img
                src={typeof project.image === 'string' ? project.image : project.image.src}
                alt={project.title}
                class="object-cover w-full h-48 rounded"
                loading="lazy"
                decoding="async"
              />
            </div>
          )}
          <div class="flex-1 flex flex-col">
            <div class="flex-grow">
              <div class="flex items-center justify-between mb-2">
                <h2 class="text-2xl font-bold leading-tight">{project.title}</h2>
                <div class="hidden md:flex gap-2">
                  {project.status.includes('latest') && (
                    <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-sm dark:bg-blue-900 dark:text-blue-300">
                      Latest
                    </span>
                  )}
                  {project.status.includes('completed') && (
                    <span class="bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded-sm dark:bg-green-900 dark:text-green-300">
                      Completed
                    </span>
                  )}
                  {project.status.includes('in-development') && (
                    <span class="bg-yellow-100 text-yellow-800 text-xs font-medium px-2.5 py-0.5 rounded-sm dark:bg-yellow-900 dark:text-yellow-300">
                      In Development
                    </span>
                  )}
                </div>
              </div>
              <p class="text-muted dark:text-slate-400 mb-4">{project.description}</p>
            </div>
            <div class="flex gap-3 mt-auto">
              <Button variant="primary" href={`/projects/${project.slug}`}>
                <Icon name="tabler:book" class="w-5 h-5 mr-1" />
                Read More
              </Button>
              {project.github && (
                <Button variant="secondary" href={project.github} target="_blank" rel="noopener noreferrer">
                  <Icon name="tabler:brand-github" class="w-5 h-5 mr-1" />
                  GitHub
                </Button>
              )}
            </div>
          </div>
        </div>
      </div>
    ))
  }
</div>