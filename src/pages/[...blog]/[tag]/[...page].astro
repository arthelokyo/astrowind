---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';
import { blogTagRobots, getStaticPathsBlogTag } from '~/utils/blog';

import Layout from '~/layouts/PageLayout.astro';
import BlogList from '~/components/blog/List.astro';
import Headline from '~/components/blog/Headline.astro';
import Pagination from '~/components/blog/Pagination.astro';

import { getBlogPermalink } from '~/utils/permalinks';

export const prerender = true;

export const getStaticPaths = (async ({ paginate }) => {
  return await getStaticPathsBlogTag({ paginate });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, tag } = Astro.props as Props;

const currentPage = page.currentPage ?? 1;

const metadata = {
  title: `Posts by tag '${tag.title}'${currentPage > 1 ? ` â€” Page ${currentPage} ` : ''}`,
  robots: {
    index: blogTagRobots?.index,
    follow: blogTagRobots?.follow,
  },
};

// Breadcrumb items
const breadcrumbItems = [
  { text: 'Blog', href: getBlogPermalink() },
  { text: `Tag: ${tag.title}` }
];

// Add page number to breadcrumbs if not on first page
if (currentPage > 1) {
  breadcrumbItems.push({ text: `Page ${currentPage}` });
}
---

<Layout metadata={metadata}>
  <section class="px-4 md:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">

    <Headline>Tag: {tag.title}</Headline>

    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />

  </section>
</Layout>

